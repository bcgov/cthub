# Generated by Django 3.1.6 on 2024-03-19 16:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    # unmanaged models will not have any SQL generated for them when it comes to table creation, modification, or deletion
    # all metabase models should be unmanaged
    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('type', models.TextField()),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('parameters', models.TextField(blank=True, null=True)),
                ('parameter_mappings', models.TextField(blank=True, null=True)),
                ('visualization_settings', models.TextField(blank=True, null=True)),
                ('public_uuid', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('archived', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('topic', models.CharField(max_length=32)),
                ('timestamp', models.DateTimeField()),
                ('model', models.CharField(blank=True, max_length=16, null=True)),
                ('model_id', models.IntegerField(blank=True, null=True)),
                ('database_id', models.IntegerField(blank=True, null=True)),
                ('table_id', models.IntegerField(blank=True, null=True)),
                ('custom_id', models.CharField(blank=True, max_length=48, null=True)),
                ('details', models.TextField()),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationPermissionsRevision',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('before', models.TextField()),
                ('after', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'application_permissions_revision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookmarkOrdering',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('item_id', models.IntegerField()),
                ('ordering', models.IntegerField()),
            ],
            options={
                'db_table': 'bookmark_ordering',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardBookmark',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'card_bookmark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardLabel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'card_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(max_length=7)),
                ('archived', models.BooleanField()),
                ('location', models.CharField(max_length=254)),
                ('slug', models.CharField(max_length=254)),
                ('namespace', models.CharField(blank=True, max_length=254, null=True)),
                ('authority_level', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionBookmark',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'collection_bookmark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionPermissionGraphRevision',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('before', models.TextField()),
                ('after', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collection_permission_graph_revision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComputationJob',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('type', models.CharField(max_length=254)),
                ('status', models.CharField(max_length=254)),
                ('context', models.TextField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computation_job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComputationJobResult',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('permanence', models.CharField(max_length=254)),
                ('payload', models.TextField()),
            ],
            options={
                'db_table': 'computation_job_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoreSession',
            fields=[
                ('id', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('anti_csrf_token', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'core_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoreUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.TextField(unique=True)),
                ('first_name', models.CharField(blank=True, max_length=254, null=True)),
                ('last_name', models.CharField(blank=True, max_length=254, null=True)),
                ('password', models.CharField(blank=True, max_length=254, null=True)),
                ('password_salt', models.CharField(blank=True, max_length=254, null=True)),
                ('date_joined', models.DateTimeField()),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('reset_token', models.CharField(blank=True, max_length=254, null=True)),
                ('reset_triggered', models.BigIntegerField(blank=True, null=True)),
                ('is_qbnewb', models.BooleanField()),
                ('google_auth', models.BooleanField()),
                ('ldap_auth', models.BooleanField()),
                ('login_attributes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('sso_source', models.CharField(blank=True, max_length=254, null=True)),
                ('locale', models.CharField(blank=True, max_length=5, null=True)),
                ('is_datasetnewb', models.BooleanField()),
                ('settings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'core_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardBookmark',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_bookmark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardcardSeries',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'dashboardcard_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardFavorite',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'dashboard_favorite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataMigrations',
            fields=[
                ('id', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'data_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=32)),
                ('model_id', models.IntegerField()),
                ('dependent_on_model', models.CharField(max_length=32)),
                ('dependent_on_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'dependency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('type', models.CharField(max_length=254)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'dimension',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImplicitAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.TextField()),
            ],
            options={
                'db_table': 'implicit_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('slug', models.CharField(max_length=254, unique=True)),
                ('icon', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('device_id', models.CharField(max_length=36)),
                ('device_description', models.TextField()),
                ('ip_address', models.TextField()),
            ],
            options={
                'db_table': 'login_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetabaseDatabase',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('details', models.TextField()),
                ('engine', models.CharField(max_length=254)),
                ('is_sample', models.BooleanField()),
                ('is_full_sync', models.BooleanField()),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('metadata_sync_schedule', models.CharField(max_length=254)),
                ('cache_field_values_schedule', models.CharField(max_length=254)),
                ('timezone', models.CharField(blank=True, max_length=254, null=True)),
                ('is_on_demand', models.BooleanField()),
                ('options', models.TextField(blank=True, null=True)),
                ('auto_run_queries', models.BooleanField()),
                ('refingerprint', models.BooleanField(blank=True, null=True)),
                ('cache_ttl', models.IntegerField(blank=True, null=True)),
                ('initial_sync_status', models.CharField(max_length=32)),
                ('settings', models.TextField(blank=True, null=True)),
                ('dbms_version', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'metabase_database',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetabaseField',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=254)),
                ('base_type', models.CharField(max_length=255)),
                ('semantic_type', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('preview_display', models.BooleanField()),
                ('position', models.IntegerField()),
                ('display_name', models.CharField(blank=True, max_length=254, null=True)),
                ('visibility_type', models.CharField(max_length=32)),
                ('fk_target_field_id', models.IntegerField(blank=True, null=True)),
                ('last_analyzed', models.DateTimeField(blank=True, null=True)),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('fingerprint', models.TextField(blank=True, null=True)),
                ('fingerprint_version', models.IntegerField()),
                ('database_type', models.TextField()),
                ('has_field_values', models.TextField(blank=True, null=True)),
                ('settings', models.TextField(blank=True, null=True)),
                ('database_position', models.IntegerField()),
                ('custom_position', models.IntegerField()),
                ('effective_type', models.CharField(blank=True, max_length=255, null=True)),
                ('coercion_strategy', models.CharField(blank=True, max_length=255, null=True)),
                ('nfc_path', models.CharField(blank=True, max_length=254, null=True)),
                ('database_required', models.BooleanField()),
                ('database_is_auto_increment', models.BooleanField()),
            ],
            options={
                'db_table': 'metabase_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetabaseFieldvalues',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('values', models.TextField(blank=True, null=True)),
                ('human_readable_values', models.TextField(blank=True, null=True)),
                ('has_more_values', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=32)),
                ('hash_key', models.TextField(blank=True, null=True)),
                ('last_used_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'metabase_fieldvalues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetabaseTable',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=254, null=True)),
                ('active', models.BooleanField()),
                ('display_name', models.CharField(blank=True, max_length=254, null=True)),
                ('visibility_type', models.CharField(blank=True, max_length=254, null=True)),
                ('schema', models.CharField(blank=True, max_length=254, null=True)),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('show_in_getting_started', models.BooleanField()),
                ('field_order', models.CharField(max_length=254)),
                ('initial_sync_status', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'metabase_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('archived', models.BooleanField()),
                ('definition', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('how_is_this_calculated', models.TextField(blank=True, null=True)),
                ('show_in_getting_started', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'metric',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricImportantField',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'metric_important_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModerationReview',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('moderated_item_id', models.IntegerField()),
                ('moderated_item_type', models.CharField(max_length=255)),
                ('moderator_id', models.IntegerField()),
                ('most_recent', models.BooleanField()),
            ],
            options={
                'db_table': 'moderation_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NativeQuerySnippet',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.TextField()),
                ('archived', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'native_query_snippet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParameterCard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('parameterized_object_type', models.CharField(max_length=32)),
                ('parameterized_object_id', models.IntegerField()),
                ('parameter_id', models.CharField(max_length=36)),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'parameter_card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('object', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionsGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'permissions_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionsGroupMembership',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_group_manager', models.BooleanField()),
            ],
            options={
                'db_table': 'permissions_group_membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionsRevision',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('before', models.TextField()),
                ('after', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permissions_revision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersistedInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('question_slug', models.TextField()),
                ('table_name', models.TextField()),
                ('definition', models.TextField(blank=True, null=True)),
                ('query_hash', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('state', models.TextField()),
                ('refresh_begin', models.DateTimeField()),
                ('refresh_end', models.DateTimeField(blank=True, null=True)),
                ('state_change_at', models.DateTimeField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'persisted_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pulse',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('skip_if_empty', models.BooleanField()),
                ('alert_condition', models.CharField(blank=True, max_length=254, null=True)),
                ('alert_first_only', models.BooleanField(blank=True, null=True)),
                ('alert_above_goal', models.BooleanField(blank=True, null=True)),
                ('collection_position', models.SmallIntegerField(blank=True, null=True)),
                ('archived', models.BooleanField(blank=True, null=True)),
                ('parameters', models.TextField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'pulse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PulseCard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('position', models.IntegerField()),
                ('include_csv', models.BooleanField()),
                ('include_xls', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'pulse_card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PulseChannel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('channel_type', models.CharField(max_length=32)),
                ('details', models.TextField()),
                ('schedule_type', models.CharField(max_length=32)),
                ('schedule_hour', models.IntegerField(blank=True, null=True)),
                ('schedule_day', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('schedule_frame', models.CharField(blank=True, max_length=32, null=True)),
                ('enabled', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'pulse_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PulseChannelRecipient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pulse_channel_recipient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzCalendars',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('calendar_name', models.CharField(max_length=200)),
                ('calendar', models.BinaryField()),
            ],
            options={
                'db_table': 'qrtz_calendars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzFiredTriggers',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('entry_id', models.CharField(max_length=95)),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('instance_name', models.CharField(max_length=200)),
                ('fired_time', models.BigIntegerField()),
                ('sched_time', models.BigIntegerField(blank=True, null=True)),
                ('priority', models.IntegerField()),
                ('state', models.CharField(max_length=16)),
                ('job_name', models.CharField(blank=True, max_length=200, null=True)),
                ('job_group', models.CharField(blank=True, max_length=200, null=True)),
                ('is_nonconcurrent', models.BooleanField(blank=True, null=True)),
                ('requests_recovery', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qrtz_fired_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzJobDetails',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=200)),
                ('job_group', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('job_class_name', models.CharField(max_length=250)),
                ('is_durable', models.BooleanField()),
                ('is_nonconcurrent', models.BooleanField()),
                ('is_update_data', models.BooleanField()),
                ('requests_recovery', models.BooleanField()),
                ('job_data', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qrtz_job_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzLocks',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('lock_name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'qrtz_locks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzPausedTriggerGrps',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('trigger_group', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'qrtz_paused_trigger_grps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzSchedulerState',
            fields=[
                ('sched_name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('instance_name', models.CharField(max_length=200)),
                ('last_checkin_time', models.BigIntegerField()),
                ('checkin_interval', models.BigIntegerField()),
            ],
            options={
                'db_table': 'qrtz_scheduler_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('query_hash', models.BinaryField(primary_key=True, serialize=False)),
                ('average_execution_time', models.IntegerField()),
                ('query', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'query',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryCache',
            fields=[
                ('query_hash', models.BinaryField(primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField()),
                ('results', models.BinaryField()),
            ],
            options={
                'db_table': 'query_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryExecution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('hash', models.BinaryField()),
                ('started_at', models.DateTimeField()),
                ('running_time', models.IntegerField()),
                ('result_rows', models.IntegerField()),
                ('native', models.BooleanField()),
                ('context', models.CharField(blank=True, max_length=32, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('executor_id', models.IntegerField(blank=True, null=True)),
                ('card_id', models.IntegerField(blank=True, null=True)),
                ('dashboard_id', models.IntegerField(blank=True, null=True)),
                ('pulse_id', models.IntegerField(blank=True, null=True)),
                ('database_id', models.IntegerField(blank=True, null=True)),
                ('cache_hit', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'query_execution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('display', models.CharField(max_length=254)),
                ('dataset_query', models.TextField()),
                ('visualization_settings', models.TextField()),
                ('query_type', models.CharField(blank=True, max_length=16, null=True)),
                ('archived', models.BooleanField()),
                ('public_uuid', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('enable_embedding', models.BooleanField()),
                ('embedding_params', models.TextField(blank=True, null=True)),
                ('cache_ttl', models.IntegerField(blank=True, null=True)),
                ('result_metadata', models.TextField(blank=True, null=True)),
                ('collection_position', models.SmallIntegerField(blank=True, null=True)),
                ('dataset', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
                ('parameters', models.TextField(blank=True, null=True)),
                ('parameter_mappings', models.TextField(blank=True, null=True)),
                ('collection_preview', models.BooleanField()),
            ],
            options={
                'db_table': 'report_card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardfavorite',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'report_cardfavorite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportDashboard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('parameters', models.TextField()),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('show_in_getting_started', models.BooleanField()),
                ('public_uuid', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('enable_embedding', models.BooleanField()),
                ('embedding_params', models.TextField(blank=True, null=True)),
                ('archived', models.BooleanField()),
                ('position', models.IntegerField(blank=True, null=True)),
                ('collection_position', models.SmallIntegerField(blank=True, null=True)),
                ('cache_ttl', models.IntegerField(blank=True, null=True)),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'report_dashboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportDashboardcard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('size_x', models.IntegerField()),
                ('size_y', models.IntegerField()),
                ('row', models.IntegerField()),
                ('col', models.IntegerField()),
                ('parameter_mappings', models.TextField()),
                ('visualization_settings', models.TextField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'report_dashboardcard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=16)),
                ('model_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('object', models.TextField()),
                ('is_reversion', models.BooleanField()),
                ('is_creation', models.BooleanField()),
                ('message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'revision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sandboxes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_remappings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sandboxes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('version', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=254)),
                ('kind', models.CharField(max_length=254)),
                ('source', models.CharField(blank=True, max_length=254, null=True)),
                ('value', models.BinaryField()),
            ],
            options={
                'db_table': 'secret',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
                ('archived', models.BooleanField()),
                ('definition', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('points_of_interest', models.TextField(blank=True, null=True)),
                ('caveats', models.TextField(blank=True, null=True)),
                ('show_in_getting_started', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'segment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('key', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('task', models.CharField(max_length=254)),
                ('db_id', models.IntegerField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('task_details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(max_length=128)),
                ('archived', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('default', models.BooleanField()),
                ('entity_id', models.CharField(blank=True, max_length=21, null=True, unique=True)),
            ],
            options={
                'db_table': 'timeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField()),
                ('time_matters', models.BooleanField()),
                ('timezone', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=128)),
                ('archived', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'timeline_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=16)),
                ('model_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('metadata', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'view_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HttpAction',
            fields=[
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.action')),
                ('template', models.TextField()),
                ('response_handle', models.TextField(blank=True, null=True)),
                ('error_handle', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'http_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzTriggers',
            fields=[
                ('sched_name', models.OneToOneField(db_column='sched_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.qrtzjobdetails')),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('job_name', models.CharField(max_length=200)),
                ('job_group', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('next_fire_time', models.BigIntegerField(blank=True, null=True)),
                ('prev_fire_time', models.BigIntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('trigger_state', models.CharField(max_length=16)),
                ('trigger_type', models.CharField(max_length=8)),
                ('start_time', models.BigIntegerField()),
                ('end_time', models.BigIntegerField(blank=True, null=True)),
                ('calendar_name', models.CharField(blank=True, max_length=200, null=True)),
                ('misfire_instr', models.SmallIntegerField(blank=True, null=True)),
                ('job_data', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qrtz_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryAction',
            fields=[
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.action')),
                ('dataset_query', models.TextField()),
            ],
            options={
                'db_table': 'query_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzBlobTriggers',
            fields=[
                ('sched_name', models.OneToOneField(db_column='sched_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.qrtztriggers')),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('blob_data', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qrtz_blob_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzCronTriggers',
            fields=[
                ('sched_name', models.OneToOneField(db_column='sched_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.qrtztriggers')),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('cron_expression', models.CharField(max_length=120)),
                ('time_zone_id', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'qrtz_cron_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzSimpleTriggers',
            fields=[
                ('sched_name', models.OneToOneField(db_column='sched_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.qrtztriggers')),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('repeat_count', models.BigIntegerField()),
                ('repeat_interval', models.BigIntegerField()),
                ('times_triggered', models.BigIntegerField()),
            ],
            options={
                'db_table': 'qrtz_simple_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QrtzSimpropTriggers',
            fields=[
                ('sched_name', models.OneToOneField(db_column='sched_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='metabase.qrtztriggers')),
                ('trigger_name', models.CharField(max_length=200)),
                ('trigger_group', models.CharField(max_length=200)),
                ('str_prop_1', models.CharField(blank=True, max_length=512, null=True)),
                ('str_prop_2', models.CharField(blank=True, max_length=512, null=True)),
                ('str_prop_3', models.CharField(blank=True, max_length=512, null=True)),
                ('int_prop_1', models.IntegerField(blank=True, null=True)),
                ('int_prop_2', models.IntegerField(blank=True, null=True)),
                ('long_prop_1', models.BigIntegerField(blank=True, null=True)),
                ('long_prop_2', models.BigIntegerField(blank=True, null=True)),
                ('dec_prop_1', models.DecimalField(blank=True, decimal_places=4, max_digits=13, null=True)),
                ('dec_prop_2', models.DecimalField(blank=True, decimal_places=4, max_digits=13, null=True)),
                ('bool_prop_1', models.BooleanField(blank=True, null=True)),
                ('bool_prop_2', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qrtz_simprop_triggers',
                'managed': False,
            },
        ),
    ]
