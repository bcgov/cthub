version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_MULTIPLE_DATABASES=superset
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  metabase:
    image: metabase/metabase
    ports:
      - 3001:3000
    env_file:
      - metabase.env
    depends_on:
      db:
        condition: service_healthy
  minio:
    image: minio/minio
    hostname: "minio"
    volumes:
      - ./minio/minio_files:/minio_files
    env_file:
      - minio.env
    command: "minio server /minio_files --console-address \":9001\""
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: "curl -I --fail --max-time 10 http://localhost:9000/minio/health/live"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
  api:
    build: ./django
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - keycloak.env
      - minio.env
      - decoder.env
    environment: 
      - ALLOWED_HOSTS=localhost
      - CORS_ORIGIN_ALLOW_ALL=False
      - CORS_ORIGIN_WHITELIST=http://localhost:3000
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - LOCAL_DEV=True
    volumes:
      - ./django:/api
    ports:
      - 8000:8000
    healthcheck:
      test: "curl --fail --max-time 5 http://localhost:8000/api/healthcheck"
      start_period: 15s
      interval: 15s
      timeout: 10s
      retries: 2
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
  workers:
    build: ./django
    command: >
      sh -c "python manage.py qcluster"
    env_file:
      - minio.env
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DJANGO_DEBUG=True
    volumes:
      - ./django:/api
    depends_on:
      api:
        condition: service_healthy
  web:
    build: ./frontend
    command: npm run start
    volumes:
      - ./frontend:/web
      - /web/node_modules
    ports:
      - 3000:3000
  spring:
    build: ./spring
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./spring:/app

volumes:
  superset_home:
    external: false
  redis:
    external: false
